# Охотник за сокровищами

import random
import sys
import math

def getNewBoard():
    """Создание игрового поля размером 60х15"""
    board = []
    # главный список из 60 списков
    for x in range(60):
        board.append([])
        # каждый список в главном списке 
        # содержит 15 односимвольных строк 
        # для создания океана используем разные символы, 
        # чтобы сделать его реалестичнее
        for y in range(15):
            if random.randint(0, 1) == 0:
                board[x].append('~')
            else:
                board[x].append('`')

    return board

def drawBoard(board):
    # Изобразить структуру данных игрового поля 
    # Создать место для чисел вниз по левой стороне поля
    tensDigitsLine = ' '

    for i in range(1, 6):
        tensDigitsLine += (' ' * 9) + str(i)

    # вывести числа в верхней части кода
    print(tensDigitsLine)
    print(' ' + ('0123456789' * 6))
    print()

    # вывести каждый из 15 рядов
    for row in range(15):
        # К однозначным числам нужно добавить дополнительный пробел
        if row < 10:
            extraSpace = ' '
        else:
            extraSpace = ''

        # Создать строку для этого ряда на игровом поле
        boardRow = ''
        for column in range(60):
            boardRow += board[column][row]

        print('%s%s %s %s' % (extraSpace, row, boardRow, row))

        # вывести числа в нижней части поля
        print()
        print(' ' + ('023456789' * 6))
        print(tensDigitsLine)

def getRandomChests(numChests):
    # Создать список структур данных сундука 
    # (двухэлементные списки целочисленных координат x,y)
    chests = []

    while len(chests) < numChests:
        newChests = [random.randint(0, 59), random.randint(0, 14)]

        if newChests not in chests:
            # убедиться что сундука тут нет
            chests.append(newChest)

    return chests

def isOnBoard(x, y):
    # True если координаты есть на поле, иначе False
    return x >= 0 and x <= 59 and y >= 0 and y <= 14

def makeMove(board, chests, x, y):
    # Изменить структуру данных поля, исползуя символ гидролокатора.  
    # Удалить сундуки с сокровищами из списка с сундуками как только их нашли. 
    # Вернуть False, если это недопустимый ход. 
    # В противном случае вернуть строку с результатом этого хода

    # Все сундуки ближе друг от друга не дальше 100 единиц
    smallestDistance = 100

    for cx, cy in chests:
        distance = math.sqrt((cx - x) * (cx - x) + (cy - y) * (cy - y))

        # Ищем ближайший сундук
        if distance < smallestDistance:
            smallestDistance = distance

    smallestDistance = round(smallestDistance)

    if smallestDistance == 0:
        # Координаты ху попали прямо в  сундук  с сокровищами
        chests.remove([x, y])
        return 'Вы нашли сундук с сокровищами на затонувшем судне'
    else:
        if smallestDistance < 10:
            board[x][y] = str(smallestDistance)
            return 'Сундук с сокровищами обнаружен на расстоянии %s от гидролокатора.' % (smallestDistance)
        else:
            board[x][y] = 'X'
            return 'гидролокатор ничего не обнаружил'

def enterPlayerMove(previousMoves):
    # Позволяет сделать ход. 
    # Вернуть двухэлементный список с координатами х, у
    print('Где следует опустить гдролокатор? (координаты: 0-59б 0-14) (или введите выход) ')
    while True:
        move = input()
        if move == 'выход':
            print('Спасибо за игру')
            sys.exit()

        move = move.split()
        if len(move) == 2 and move[0].isdigit() and move[1].isdigit() and isOnBoard(int(move[0]), int(move[1])):
            if [int(move[0]), int(move[1])] in previousMoves:
                print('Вы уже опускали тут гидролокатор')
                continue
            return [int(move[0]), int(move[1])]

        print('Введите число от 0 до 59, потом пробел  и число от 0 до 14')

def showInstructions():
    print(
        '''
        Инструктаж:
        Вы капитан корабля, плывущего за сокровищами. Ваша задача - с помощью гидролокаторов найти три сундука с сокровищами в затонувших судах на дне океана.
        Но гидролокаторы очень просты и опредяют только расстояние, но не направление.
        Введите координаты, чтобы опустить гидролокатор в в воду. На карте будет показано число, обозначающее, на каком расстоянии находится ближайший сундук.
        Или будет показана буква Х, обозначающая, что сундук в области действия гидролокатора не обнаружен.
        На карте ниже метки С - это сундуки. 
        Цифра 3 обозначает, что ближайший сундук находится на отдалении в 3 единицы.
                            1         2         3
                  012345678901234567890123456789012

                0 ~~~~`~```~`~``~~~``~`~~``~~~``~`~ 0
                1 ~`~`~``~~`~```~~~```~~`~`~~~`~~~~ 1
                2 `~`C``3`~~~~`C`~~~~`````~~``~~~`` 2
                3 ````````~~~`````~~~`~`````~`~``~` 3
                4 ~`~~~~`~~`~~`C`~``~~`~~~`~```~``~ 4

                  012345678901234567890123456789012		
                            1         2         3

        (Во игры сундуки на карте не обозначаются!)

        Нажмите клавишу Enter, Чтобы продолжить...
    '''
    )
    input()

    print(
        '''
        Если гидролокатор опущен прямо на сундук, вы сможете поднять сундук.
        Другие гидролокаторы обновят данные о расположении ближайшего сундука.
        Сундуки ниже находятся вне диапазона локатора, поэтому отображается буква Х

                            1         2         3
                  012345678901234567890123456789012		
		
                0 ~~~~`~```~`~``~~~``~`~~``~~~``~`~ 0
                1 ~`~`~``~~`~```~~~```~~`~`~~~`~~~~ 1
                2 `~`X``7`~~~~`C`~~~~`````~~``~~~`` 2
                3 ````````~~~`````~~~`~`````~`~``~` 3
                4 ~`~~~~`~~`~~`C`~``~~`~~~`~```~``~ 4

                  012345678901234567890123456789012
                            1         2         3

        Сундуки с сокровищами не перемещаются. Гидролокаторы определяют сундуки на расстоянии до 9 единиц.
        Попроуйте поднять все 3 сундука до того, как все гидролокаторы будут опущены на дно. Удачи

        нажмите клавишу Enter...
        '''
    )
    input()

    print('Охотник за сокровищами!')
    print()
    print('Показать инструктаж? (да/нет) ')
    if input().lower().startswith('д'):
        showInstructions()

    while True:
        # Настройка игры
        sonarDevices = 20
        theBoard = getNewBoard()
        theChests = getRandomChests(3)
        drawBoard(theBoard)
        previousMoves = []

        while sonarDevices > 0:
            # Показать санарные устройства и сундуки с сокровищами
            print('Осталось гидролокаторов: %s. Осталось сундуков с сокровищами: %s' % (sonarDevices, len(theChests)))